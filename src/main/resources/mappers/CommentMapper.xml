<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ado.demo.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.ado.demo.entity.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="father_id" property="fatherId" jdbcType="INTEGER" />
    <result column="blog_id" property="blogId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="have_reply" property="haveReply" jdbcType="BIT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ado.demo.entity.Comment" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, father_id, blog_id, user_id, date, have_reply
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ado.demo.entity.Comment" >
    insert into comment (id, father_id, blog_id, 
      user_id, date, have_reply, 
      content)
    values (#{id,jdbcType=INTEGER}, #{fatherId,jdbcType=INTEGER}, #{blogId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP}, #{haveReply,jdbcType=BIT}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ado.demo.entity.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fatherId != null" >
        father_id,
      </if>
      <if test="blogId != null" >
        blog_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="haveReply != null" >
        have_reply,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fatherId != null" >
        #{fatherId,jdbcType=INTEGER},
      </if>
      <if test="blogId != null" >
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="haveReply != null" >
        #{haveReply,jdbcType=BIT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ado.demo.entity.Comment" >
    update comment
    <set >
      <if test="fatherId != null" >
        father_id = #{fatherId,jdbcType=INTEGER},
      </if>
      <if test="blogId != null" >
        blog_id = #{blogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="haveReply != null" >
        have_reply = #{haveReply,jdbcType=BIT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ado.demo.entity.Comment" >
    update comment
    set father_id = #{fatherId,jdbcType=INTEGER},
      blog_id = #{blogId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      have_reply = #{haveReply,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ado.demo.entity.Comment" >
    update comment
    set father_id = #{fatherId,jdbcType=INTEGER},
      blog_id = #{blogId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      have_reply = #{haveReply,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>